/*
http://demo.pagelines.me/theming/
and
http://phpxref.pagelines.com/nav.html?less/mixins.less.source.html
*/

@firered: #FF1A0A;
@fireorange: #FF954F;


/*
*
* Links --> coloring for both a and a:hover get overridden by shortcode's color attribute, if used. User could choose to override with child theme or Custom Code if desired.
*
*/
a.iconfont,
a.iconfont:link,
a.iconfont:visited {
	color: @pl-text;
	text-decoration: none;
}
a.iconfont:hover {
	color: @pl-link;
	text-decoration: none;
}

/*
*
* LESS colors -> not supported by 'color' shortcode attribute
*
*/
span.inverse {
	color: @pl-base;
	background: @pl-text;
	}

span.darkbase {
	color: @dark-base;
	}
span.light-base {
	color: @light-base;
	}
/* could add more */



/*
*
* opacity
*
*/
span.op0,
span.opnone {
	.opacity(0); /* could also use color="transparent" within the shortcode */
	}
span.op25,
span.opsome {
	.opacity(25);
	}
span.op50,
span.ophalf {
	.opacity(50);
	}
span.op75,
span.opmost {
	.opacity(75);
	}

/*
*
* backgrounds
*
*/


/* NEEDS to be used in conjuction with another background property. */
span.rounded{
	.border-radius(.1em);
	}
span.roundedmore{
	.border-radius(.5em);
	}
span.roundedlots{
	.border-radius(1em);
	}


/*
*	NEEDS to be used in conjuction with another background property, otherwise just effectively adds a bit of padding due to the em > 1
*	Works best for non-odd-shaped (icon-money does not look good)
*/
span.circle,
span.bgcircle {
	width:1.2em;
	height:1.2em;
	border-radius: .6em;
	vertical-align: middle;
	text-align: center;
}



span.bgblack {
	background: rgb(0,0,0);
	}
span.bgwhite {
	background: rgb(255,255,255);
	}
span.bggray, span.bggrey {
	background: rgb(128,128,128);
	}
span.bglime {
	background: rgb(0,255,0);
	}
span.bgmaroon {
	background: rgb(128,0,0);
	}
span.bgnavy {
	background: rgb(0,0,128);
	}
span.bgaqua {
	background: rgb(0,255,255);
	}
span.bgorange {
	background: rgb(255,165,0);
	}
span.bgdeeppink {
	background: rgb(255,20,147);
	}
span.bgdeepskyblue {
	background: rgb(0,191,255);
	}
span.bgmidnightblue {
	background: rgb(25,25,112);
	}
span.bgslategray, span.bgslategrey {
	background: rgb(112,128,144);
	}
span.bgsnow {
	background: rgb(255,250,250);
	}
span.bgtomato,
span.bgtomatoe {
	background: rgb(255,99,71);
	}
span.bgwhitesmoke {
	background: rgb(245,245,245);
	}
span.bgyellowgreen {
	background: rgb(154,205,50);
	}



/* Bootstrap's */
span.highlight {
	.highlightMe();
	}


/* could add some of the relative color references */



/* Custom */
span.bgfire {
	background: @fireorange;
	#gradient > .vertical(@fireorange,@firered);
	}
	/* red to orange gradient with orange fallback for old browsers */


span.bgrainbow {
	background: -moz-linear-gradient(top, red 0%, orange 18%, yellow 33%, green 48%, blue 65%, indigo 80%, violet 100%);
	background: -ms-linear-gradient(top, red 0%, orange 18%, yellow 33%, green 48%, blue 65%, indigo 80%, violet 100%);
	background: -o-linear-gradient(top, red 0%, orange 18%, yellow 33%, green 48%, blue 65%, indigo 80%, violet 100%);
	background: -webkit-gradient(linear, 0 0, 0 100%, from(red), color-stop(0.18, orange), color-stop(0.33, yellow), color-stop(0.48, green), color-stop(0.65, blue), color-stop(0.8, indigo), to(violet));
	background: -webkit-linear-gradient(top, red 0%, orange 18%, yellow 33%, green 48%, blue 65%, indigo 80%, violet 100%);
	background: linear-gradient(top, red 0%, orange 18%, yellow 33%, green 48%, blue 65%, indigo 80%, violet 100%);
	}
	/* from http://www.impressivewebs.com/css3-linear-gradient-syntax/ */





/*
*
* shadows
*
*/

/* box-shadow --> only useful if you also have a background
	--> and actually doesn't seem to work at all... gets crossed out in Web Inspector
CSS syntax --> box-shadow: h-shadow v-shadow blur spread color inset;
LESSified below
*/
span.shadow {
	.box-shadow(.1em);
	}
span.shadowmore {
	.box-shadow(.5em);
	}
span.shadowlots {
	.box-shadow(1em);
	}
span.shadowhuge {
	.box-shadow(3em);
	}


/* Syntax --> text-shadow: h-shadow v-shadow blur color; */
span.textshadow {
	text-shadow: .1em .1em .1em @light-base;
	}
span.textshadowmore {
	text-shadow: .2em .2em .2em @light-base;
	}
span.textshadowlots {
	text-shadow: .3em .3em .3em @light-base;
	}
span.textshadowhuge {
	text-shadow: .5em .5em .5em @light-base;
	}



/*
*
* outlining --> see http://www.paulund.co.uk/css-text-stroke with demo at http://www.paulund.co.uk/playground/demo/css-properties/text-stroke.php
* notice: only works on webkit browsers
*
*/
span.outline,
span.outline1,
span.outlineone {
	-webkit-text-fill-color: @pl-base;
	-webkit-text-stroke: 1px @pl-text;
	}
span.outline2,
span.outlinetwo {
	-webkit-text-fill-color: @pl-base;
	-webkit-text-stroke: 2px @pl-text;
	}
span.outline3,
span.outlinethree {
	-webkit-text-fill-color: @pl-base;
	-webkit-text-stroke: 3px @pl-text;
	}
span.outline4,
span.outlinefour {
	-webkit-text-fill-color: @pl-base;
	-webkit-text-stroke: 4px @pl-text;
	}
span.outline5,
span.outlinefive {
	-webkit-text-fill-color: @pl-base;
	-webkit-text-stroke: 5px @pl-text;
	}
span.outline6,
span.outlinesix {
	-webkit-text-fill-color: @pl-base;
	-webkit-text-stroke: 6px @pl-text;
	}
span.outline7,
span.outlineseven {
	-webkit-text-fill-color: @pl-base;
	-webkit-text-stroke: 7px @pl-text;
	}
span.outline8,
span.outlineeight {
	-webkit-text-fill-color: @pl-base;
	-webkit-text-stroke: 8px @pl-text;
	}
span.outline9,
span.outlinenine {
	-webkit-text-fill-color: @pl-base;
	-webkit-text-stroke: 9px @pl-text;
	}
span.outline10,
span.outlineten {
	-webkit-text-fill-color: @pl-base;
	-webkit-text-stroke: 10px @pl-text;
	}



/*
*
* rotate --> have to add CSS position for it to take effect.
* NOTES:
* Does not take effect if used inside a Bootstrap/PageLines button in my testing :-(
* Not supported in all browsers as of 2013-02-19. Check http://css-tricks.com/transitions-and-animations-on-css-generated-content/ for current status.
* At this time, Chrome suffers from aliasing (reported bug, http://stackoverflow.com/questions/6492027/css-transform-jagged-edges-in-chrome ).
*/

/* increments of 30 degrees, with positive and negative options */
span.rotate,
span.rotate30,
span.rotate-330 {
	position: relative;
	.rotate(30deg);
	}
span.rotate60,
span.rotate-300 {
	position: relative;
	.rotate(60deg);
	}
span.rotate90,
span.rotate-270 {
	position: relative;
	.rotate(90deg);
	}
span.rotate120,
span.rotate-240 {
	position: relative;
	.rotate(120deg);
	}
span.rotate150,
span.rotate-210 {
	position: relative;
	.rotate(150deg);
	}
span.rotate180,
span.rotate-180 {
	position: relative;
	.rotate(180deg);
	}
span.rotate210,
span.rotate-150 {
	position: relative;
	.rotate(210deg);
	}
span.rotate240,
span.rotate-120 {
	position: relative;
	.rotate(240deg);
	}
span.rotate270,
span.rotate-90 {
	position: relative;
	.rotate(270deg);
	}
span.rotate300,
span.rotate-60 {
	position: relative;
	.rotate(300deg);
	}
span.rotate330,
span.rotate-30 {
	position: relative;
	.rotate(330deg);
	}

/* increments of 45 degrees, non-overlapping with the 30's above */

span.rotate45,
span.rotate-315 {
	position: relative;
	.rotate(45deg);
	}
span.rotate135,
span.rotate-225 {
	position: relative;
	.rotate(135deg);
	}
span.rotate225,
span.rotate-135 {
	position: relative;
	.rotate(225deg);
	}
span.rotate315,
span.rotate-45 {
	position: relative;
	.rotate(315deg);
	}